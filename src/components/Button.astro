---
interface Props {
  href: string;
  variant?: "primary" | "secondary" | "outline";
  size?: "small" | "medium" | "large";
  fullWidth?: boolean;
}

const {
  href,
  variant = "primary",
  size = "medium",
  fullWidth = false,
} = Astro.props;
---

<a
  href={href}
  class:list={[
    "button",
    `button-${variant}`,
    `button-${size}`,
    { "button-full": fullWidth },
  ]}
>
  <slot />
</a>

<style>
  .button {
    display: inline-block;
    text-decoration: none;
    font-weight: 500;
    border-radius: 4px;
    transition: all 0.3s ease;
    text-align: center;
    cursor: pointer;
  }

  .button-primary {
    background-color: var(--color-primary);
    color: white;
    border: 2px solid var(--color-primary);
  }

  .button-primary:hover {
    background-color: var(--color-primary-dark);
    border-color: var(--color-primary-dark);
  }

  .button-secondary {
    background-color: var(--color-secondary);
    color: white;
    border: 2px solid var(--color-secondary);
  }

  .button-secondary:hover {
    opacity: 0.9;
  }

  .button-outline {
    background-color: transparent;
    color: var(--color-primary);
    border: 2px solid var(--color-primary);
  }

  .button-outline:hover {
    background-color: var(--color-primary);
    color: white;
  }

  .button-small {
    padding: 0.4rem 1rem;
    font-size: 0.875rem;
  }

  .button-medium {
    padding: 0.8rem 1.5rem;
    font-size: 1rem;
  }

  .button-large {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }

  .button-full {
    display: block;
    width: 100%;
  }
</style>
